import { useState, useEffect } from "react"
import axios from "axios"
import { useNavigate } from "react-router-dom"

export default function DirectorPage() {
  const [tools, setTools] = useState([])
  const [form, setForm] = useState({
    name: "",
    description: "",
    type: "",
    wear_degree: "",
    supplier_name: "",
    purchase_date: "",
    quantity: "",
  })
  const [error, setError] = useState("")
  const navigate = useNavigate()

  useEffect(() => {
    const token = localStorage.getItem("token")
    if (!token) {
      navigate("/")
      return
    }

    axios
      .get("http://localhost:3000/api/tools", {
        headers: { Authorization: `Bearer ${token}` },
      })
      .then((res) => setTools(res.data))
      .catch((err) => {
        console.error(err)
        navigate("/")
      })
  }, [navigate])

  function handleChange(e) {
    setForm({ ...form, [e.target.name]: e.target.value })
  }

  async function handleSubmit(e) {
    e.preventDefault()
    setError("")
    const token = localStorage.getItem("token")

    try {
      await axios.post("http://localhost:3000/api/tools", form, {
        headers: { Authorization: `Bearer ${token}` },
      })

      const res = await axios.get("http://localhost:3000/api/tools", {
        headers: { Authorization: `Bearer ${token}` },
      })
      setTools(res.data)

      setForm({
        name: "",
        description: "",
        type: "",
        wear_degree: "",
        supplier_name: "",
        purchase_date: "",
        quantity: "",
      })
    } catch (err) {
      setError("–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏")
      console.log(err)
    }
  }

  function handleLogout() {
    localStorage.removeItem("token")
    localStorage.removeItem("user")
    navigate("/")
  }

  return (
    <div style={{ padding: "2rem" }}>
      <h2>–£—á—ë—Ç –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ (–¥–∏—Ä–µ–∫—Ç–æ—Ä)</h2>

      <form onSubmit={handleSubmit}>
        <input name="name" placeholder="–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ" value={form.name} onChange={handleChange} required />
        <br />
        <input name="description" placeholder="–û–ø–∏—Å–∞–Ω–∏–µ" value={form.description} onChange={handleChange} />
        <br />
        <input name="type" placeholder="–¢–∏–ø –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞" value={form.type} onChange={handleChange} />
        <br />
        <input name="wear_degree" placeholder="–°—Ç–µ–ø–µ–Ω—å –∏–∑–Ω–æ—Å–∞" value={form.wear_degree} onChange={handleChange} />
        <br />
        <input name="supplier_name" placeholder="–ü–æ—Å—Ç–∞–≤—â–∏–∫" value={form.supplier_name} onChange={handleChange} />
        <br />
        <input name="purchase_date" type="date" value={form.purchase_date} onChange={handleChange} />
        <br />
        <input name="quantity" type="number" placeholder="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ" value={form.quantity} onChange={handleChange} />
        <br />
        <button type="submit">–î–æ–±–∞–≤–∏—Ç—å</button>
        {error && <p style={{ color: "red" }}>{error}</p>}
      </form>

      <h3>–°–ø–∏—Å–æ–∫ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤</h3>
      <table border="1" cellPadding="6">
        <thead>
          <tr>
            <th>–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ</th>
            <th>–¢–∏–ø</th>
            <th>–í–æ–∑—Ä–∞—Å—Ç (–º–µ—Å)</th>
            <th>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ</th>
          </tr>
        </thead>
        <tbody>
          {tools.map((tool) => (
            <tr key={tool.id}>
              <td>{tool.name}</td>
              <td>{tool.type}</td>
              <td>{tool.age_in_months}</td>
              <td>{tool.quantity}</td>
            </tr>
          ))}
        </tbody>
      </table>

      <br />
      <div style={{ display: "flex", flexWrap: "wrap", columnGap: "10px", rowGap: "10px", marginBottom: "1rem" }}>
        <button onClick={() => navigate("/ingredients")}>–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã</button>
        <button onClick={() => navigate("/decorations")}>–î–µ–∫–æ—Ä–∞—Ü–∏–∏</button>
        <button onClick={() => navigate("/workshop-layout")}>–°—Ö–µ–º—ã —Ü–µ—Ö–æ–≤</button>
        <button onClick={() => navigate("/orders")}>–ó–∞–∫–∞–∑—ã</button>
        <button onClick={() => navigate("/director/failures")}>–°–±–æ–∏ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è</button> {/* üî• –Ω–æ–≤–∞—è –∫–Ω–æ–ø–∫–∞ */}
      </div>

      <button onClick={handleLogout}>–í—ã–π—Ç–∏</button>
    </div>
  )
}
